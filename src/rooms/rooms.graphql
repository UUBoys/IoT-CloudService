type Room {
    id: String!
    name: String!
    inviteCode: String
    plants: [Plant]
}

input RoomPlantInput {
    plantId: String!
}

input CreateRoomInput {
    name: String!
    plants: [RoomPlantInput]
}

input AddPlantsToRoomInput {
    roomId: String!
    plants: [RoomPlantInput]
}

input RemovePlantsFromRoomInput {
    roomId: String!
    plants: [RoomPlantInput]
}

input AddUserToRoomInput {
    roomId: String!
    inviteCode: String!
}

input UpdateRoomInput {
    roomId: String!
    name: String!
}

type Query {
    rooms: [Room]
    room(id: String!): Room
}

type Mutation {
    createRoom(room: CreateRoomInput!): Room
    updateRoom(roomUpdate: UpdateRoomInput!): Room
    addUserToRoom(addUser: AddUserToRoomInput!): Boolean
    addPlantsToRoom(addPlants: AddPlantsToRoomInput!): Room
    removePlantsFromRoom(removePlants: RemovePlantsFromRoomInput!): Room
    deleteRoom(roomId: String!): Room
}
